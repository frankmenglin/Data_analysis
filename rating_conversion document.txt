A friend of mine wants to know what is the approximately equivalent strength of GO(weiqi) vs. chess.

This is my attempt to construct a conversion table between dan/kyu type rating (fox fo) and ELO rating (lichess, chess.com) by using simulation.

A few conditions are modified (from the actual GO or chess) to simplify the simulation set up.


Simulation set up and explaination:

Consider a competitive game of 2 players with no chance of drawing (one will win and one will lose at the end).

Player's rating is determined by "rank" (dan/kyu), an integer that changes according to the fox fo rules (with the exception that we bar jump promotion/demotion)
Game can only be played between players of the same rank.
The fox fo rule can be found in FoxFo_Rule.png

Positive integer rank corresponds to dan level (e.g. 3 means 3dan), 0 means 1kyu, -1 means 2kyu, etc.

The max rank one can get is +10 (10 dan), the min rank one can get is -17 (18kyu).

Assume for each player, there is a number that represents the player's playing strength (think of it as ELO rating), that number does not change over time.
Assume for a large pool of players, the strength distribution is a normal distribution with mean=1500, std=400 (similar to lichess rating distribution).

For each game played by A (with stregth x), and B (with strength y), the win rate of A is (1+10^((x-y)/400))^(-1), the same formula of ELO rating.

The goal is to find the average strength of players at each rank, after sufficient amount of games being played.


Sample simulation set up

20000 players with strength generated by the normal random number generator.
All players start with rank=-9 (10kyu)
Randomly pick two players, if they are the same rank, they play a game. Win/loss records and rank are updated accordingly.
We run 20 million games in this simulation.
Feel free to change the simulation parameters in the file rating_conversion.py

The sample simulation result can be found in rating_conversion_table.txt